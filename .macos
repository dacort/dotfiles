#!/usr/bin/env bash

# ~/.macos — https://github.com/mathiasbynens/dotfiles/blob/main/.macos

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# General UI/UX                                                               #
###############################################################################

# Single tap to click
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true

# Enable three-finger drag
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -int 1

# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1

# Dark mode
# I tried to set this, but ran into an issue. Had to disable Aqua as mentioned:
# https://discussions.apple.com/thread/254074961
defaults write -g AppleInterfaceStyle Dark

###############################################################################
# Dock, Dashboard, and hot corners                                            #
###############################################################################

# Set the icon size of Dock items to 42 pixels
defaults write com.apple.dock tilesize -int 42

# Show only open applications in the Dock
defaults write com.apple.dock static-only -bool true

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

##############################################################################
# Prettify the Terminal
##############################################################################

curl -sLO https://github.com/nordtheme/terminal-app/raw/develop/src/xml/Nord.terminal && \
  open Nord.terminal && \
  rm Nord.terminal &&  \
  defaults write com.apple.Terminal "Default Window Settings" -string "Nord" && \
  defaults write com.apple.Terminal "Startup Window Settings" -string "Nord"

cd ~/Library/Fonts && {
    curl -sL "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf" -o "MesloLGS NF Regular.ttf"
    curl -sL "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf" -o "MesloLGS NF Bold.ttf"
    curl -sL "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf" -o "MesloLGS NF Italic.ttf"
    curl -sL "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf" -o "MesloLGS NF Bold Italic.ttf"
    cd -; }

osascript -e 'tell application "Terminal"
        set font name of settings set "Nord" to "MesloLGS NF"
end tell'

##############################################################################
# The Basics
##############################################################################
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" && \
  eval "$(/opt/homebrew/bin/brew shellenv)" && \
  brew install \
    powerlevel10k \
    raycast \
    spotify \
    stats \
    zsh-autosuggestions \
    zsh-syntax-highlighting


# AWS Session Manager plugin
if command -v aws &> /dev/null; then
  curl -s "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/mac_arm64/session-manager-plugin.pkg" -o "session-manager-plugin.pkg" && \
    sudo installer -pkg session-manager-plugin.pkg -target / && \
    sudo ln -s /usr/local/sessionmanagerplugin/bin/session-manager-plugin /usr/local/bin/session-manager-plugin && \
    rm session-manager-plugin.pkg
fi


###############################################################################
# Kill affected applications                                                  #
###############################################################################

for app in "Activity Monitor" \
	"Dock"; do
	killall "${app}" &> /dev/null
done
echo "Done. Note that some of these changes require a logout/restart to take effect."
